# 1. Create a service account with roles of Storage Admin, Compute Admin and IAP-secured Tunnel User
# 2. Generate and download a json key for that service account
# 3. Edit your compute engine default service account and grant access to your new service account with the role Service Account User
# 4. Go to the project of this workflow on github. Settings > Secrets & Variables > Actions
# 5. Create a new repository secret for the service account key, something like SERVICE_ACCOUNT_KEY
# 6. Create a new ssh pair (ssh-keygen -b 2048 -t rsa)
# 7. Add the private key to your project as a secret (id_rsa), something like GCP_SSH_PRIVATE_KEY
# 8. Add the public key to your project or instance (id_rsa.pub)

name: Build And Deploy Container To Compute Engine

on:
  workflow_call:
    inputs:
      project_id:
        required: true
        type: string
      image_name:
        required: true
        type: string
      compute_instance_name:
        required: true
        type: string
      compute_zone:
        required: true
        type: string
      docker_build_command:
        required: true
        type: string
      image_tag:
        type: string
    secrets:
      service_account_json_key:
        required: true
      instance_ssh_private_key:
        required: false

env:
  ssh_key: ${{secrets.service_account_json_key}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.service_account_json_key }}'

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Build Docker image
        run: ${{ inputs.docker_build_command }}

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
      - name: Push Docker Image to Container Registry (GCR)
        run: |-
          docker tag ${{inputs.image_name}}:latest gcr.io/${{inputs.project_id}}/${{inputs.image_name}}:latest
          docker tag ${{inputs.image_name}}:latest gcr.io/${{inputs.project_id}}/${{inputs.image_name}}:${{ inputs.image_tag || github.sha}}
          docker push gcr.io/${{inputs.project_id}}/${{inputs.image_name}}:latest
          docker push gcr.io/${{inputs.project_id}}/${{inputs.image_name}}:${{ inputs.image_tag || github.sha}}

      - name: Update compute engine
        run: |
          gcloud compute instances update-container ${{inputs.compute_instance_name}} --zone ${{inputs.compute_zone}} \
            --container-image gcr.io/${{inputs.project_id}}/${{inputs.image_name}}:latest

      - name: Clean Up Dangling images
        if: ${{ env.ssh_key }}
        uses: google-github-actions/ssh-compute@v0
        with:
          instance_name: ${{inputs.compute_instance_name}}
          zone: ${{inputs.compute_zone}}
          ssh_private_key: '${{ secrets.instance_ssh_private_key }}'
          command: docker image prune -f
